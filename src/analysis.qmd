---
title: "Salivary ductal carcinoma: demographics, presentation, treatment, and outcome"
author: "Minsoo Kim"
date: "11/26/2022"
format:
  html:
    code-fold: true
jupyter: julia-1.8
---

```{julia}
using XLSX, DataFrames, Statistics, Survival, StatsModels, CairoMakie, HypothesisTests, PrettyTables
df = DataFrame(XLSX.readtable("../data/salivaryductca-new.xlsx", 1))
rename!(df, 
    ["age at diagnosis", "facial nerve sacrifice", "adjuvant treatment",
    "Carcinoma ex-pleomorphic adenoma", "perineural invasion", "her2 status", 
    "lymphovascular invasion", "extracapsular spread", "T stage", "N stage",
    "M stage", "years to outcome", "death age"] 
    .=> ["age", "cn7", "adjuvant", "pleomorphic", "pni", "her2", "vascular", 
    "extracapsular", "T", "N", "M", "years", "death"])
df = df[Not([2, 9, 17, 46, 123]),:]
dropmissing!(df, :years)
filter!(row -> row.years != "unknown", df)
df.event = EventTime.(df[!, "years"], df[!, "death"] .!= "n/a")
df.ages = (df.age .- mean(df.age)) / std(df.age) # standardized
df.site1 .= 0
df.site1[df.site .== "parotid"] .= 1
df.T1 .= 0
df.T1[df.T .== "4a" .|| df.T .== "4b" .|| df.T .== 4 .|| df.T .== 3] .= 1
df.N1 .= 0
df.N1[df.N .== "2a" .|| df.N .== "2b" .|| df.N .== "2c" .|| df.N .== "3b"] .= 1;
```

## Survival outcome
Cox proportional hazards models were fit to assess the effects of different covariates on overall survival. Given limited sample size, we first tested individual covariates one at a time. Then jointly tested those that were significantly associated (i.e. P < 0.05). The results of fitting univariable and multivariable models are shown in Table 4 and 5, respectively. Of note, age was mean centered and standardized and for each covariate, samples with unknown values were removed when testing its effect. Statistical analyses were conducted using Survival.jl julia package.

```{julia}
#| label: table-4
#| tbl-cap: something.
model = [
    "procedure (surgical resection)" -1.54 0.76 0.04
    "age" 0.44 0.26 0.09
    "sex (male)" 0.48 0.48 0.31
    "smoking" 0.80 0.47 0.09
    "alcohol" 0.18 0.47 0.70
    "metastasis" 1.73 0.49 0.0004
    "site (parotid)" 0.94 0.62 0.13
    "T stage (>2)" 0.86 0.44 0.05
    "N stage (â‰¥2)" 0.99 0.51 0.05
    "carcinoma ex-pleomorphic adenoma" 0.02 0.78 0.98
    "perineural invasion" 1.09 0.63 0.09
    "extracapsular spread" 0.68 0.56 0.23
    "lymphovascular invasion" 0.80 0.49 0.10
    "ERBB2 status" 0.11 0.44 0.80
    "facial nerve sacrifice" 0.047 0.48 0.92
    ]

pretty_table(
    model; 
    header = ["Covariate", "Effect size (log HR)", "Standard error", "P value"],
    tf = tf_unicode_rounded)
```
**Table 4**. Effect of individual covariates on overall survival when fitting a univariable Cox proportional hazards model. Surgical resection, metastasis, and T1 stage were significant at P < 0.05, while age, smoking, N stage, perineural invasion were significant at P < 0.1. Note that surgical resection was associated with improved survival compared to biopsy only.

```{julia}
#| label: table-5
#| tbl-cap: something.
model = [
    "procedure (surgical resection)" -0.55 0.81 0.50
    "metastasis" 1.63 0.51 0.001
    "T stage (>2)" 0.37 0.47 0.44
    ]

pretty_table(
    model; 
    header = ["Covariate", "Effect size (log HR)", "Standard error", "P value"],
    tf = tf_unicode_rounded)
```
**Table 5**. Effect of multiple covariates on overall survival when modelling them jointly with a multivariable Cox proportional hazards model. Metastasis was significantly associated with poor outcome.

## Kaplan-Meier curve
```{julia}
#| label: fig-1
#| fig-cap: Overall survival probability at 3 years was 0.88 and median overall survival was 12 years in our study, suggesting high survival rate than previously suggested by prior work.
model = fit(KaplanMeier, Float64.(df.years), df.death .!= "n/a") 
t = [0.0]
s = [1.0]
for i in 1:length(model.times)
    push!(t, model.times[i])
    push!(s, s[end])
    if model.survival[i] < s[end]
        push!(t, model.times[i])
        push!(s, model.survival[i])
    end
end
set_theme!(font = "Arial")
f = Figure()
ax = Axis(f[1, 1])
lines!(ax, t, s)
hidedecorations!(ax, ticklabels = false, ticks = false)
ax.yticks = 0:0.2:1.0
ax.xticks = 0:2:maximum(t)
ylims!(ax, -0.05, 1.05)
Label(f[2, 1], text = "years", tellwidth = false)
Label(f[1, 0], text = "survival probability", rotation = pi / 2, tellheight = false)
colsize!(f.layout, 1, Aspect(1, 1))
f
```

TODO's:

- Add confidence band to Kaplan-Meier curve and add censoring marks
- Add log-rank test to KM curves an alternative to univariable survival model
- Maybe look at disease-free survival(?)